#\u9ED8\u8BA4\u6FC0\u6D3B\u914D\u7F6E\u6587\u4EF6
spring.profiles.active=@profileActive@

#\u670D\u52A1\u7AEF\u53E3\u53F7
server.port=9041

#\u65E5\u5FD7\u914D\u7F6Exml
logging.config=classpath:logback-spring.xml
#\u8FC7\u6EE4mybatis\u65E5\u5FD7
logging.level.tk.mybatis=TRACE

#mybatis \u54CD\u5E94\u7C7B\u578B\u6620\u5C04
mybatis.type-aliases-package=com.apocalypse.example.model
#mybatis \u6620\u5C04\u6587\u4EF6
mybatis.mapper-locations=classpath:mapper/*Mapper.xml
#mapper\u63A5\u53E3\u5B9E\u73B0
mapper.mappers=com.apocalypse.common.mybatis.MyMapper
#insertSelective \u548C updateByPrimaryKeySelective \u4E2D\uFF0C\u662F\u5426\u5224\u65AD\u5B57\u7B26\u4E32\u7C7B\u578B !=''
mapper.not-empty=false
#\u5B9E\u4F53\u548C\u8868\u8F6C\u6362\u65F6\u7684\u9ED8\u8BA4\u89C4\u5219
mapper.style=camelhumpAndLowercase
#\u914D\u7F6E\u4E3A true \u540E\uFF0Cdelete \u548C deleteByExample \u90FD\u5FC5\u987B\u8BBE\u7F6E\u67E5\u8BE2\u6761\u4EF6\u624D\u80FD\u5220\u9664\uFF0C\u5426\u5219\u4F1A\u629B\u51FA\u5F02\u5E38
mapper.safe-delete=true
#\u914D\u7F6E\u4E3A true \u540E\uFF0CupdateByExample \u548C updateByExampleSelective \u90FD\u5FC5\u987B\u8BBE\u7F6E\u67E5\u8BE2\u6761\u4EF6\u624D\u80FD\u5220\u9664\uFF0C\u5426\u5219\u4F1A\u629B\u51FA\u5F02\u5E38
mapper.safe-update=true
#\u6307\u5B9A\u6570\u636E\u5E93\u7C7B\u578B
mapper.identity=MYSQL
#\u81EA\u52A8\u5904\u7406\u5173\u952E\u5B57
mapper.wrap-keyword=`{0}`
#\u6821\u9A8C\u901A\u7528 Example \u6784\u9020\u53C2\u6570 entityClass \u662F\u5426\u548C\u5F53\u524D\u8C03\u7528\u7684 Mapper<EntityClass> \u7C7B\u578B\u4E00\u81F4
mapper.check-example-entity-class=true
#\u683C\u5F0F\u5316SQL
mapper.seq-format=true


#druid\u6570\u636E\u6E90\u914D\u7F6E
# \u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E\uFF0C\u5E94\u7528\u5230\u4E0A\u9762\u6240\u6709\u6570\u636E\u6E90\u4E2D
# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.druid.initialSize=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=20
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.druid.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1 FROM dual
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=true
spring.datasource.druid.testOnReturn=false
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.druid.filters=stat,wall,log4j
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
#spring.datasource.druid.useGlobalDataSourceStat=true
